'''
2. Написать функцию, которая принимает произвольное количество любых аргументов. 
    Аргументами могут быть вложенные списки и кортежи, содержащие числа и другие списки и кортежи. 
    Пример вызова функции: foo(1, 2, [3, 4, (5, 6, 0)], a=(10, 11), b=(3, 4, [5, 6, [7, 8], []]))
    Функция должна вернуть произведение и сумму всех ненулевых элементов вложенных чисел. 
    Возможны циклические ссылки в аргументах. Пример такого аргумента: a = [1, 2, 3]; a.append(a) 
    При обнаружении циклической ссылки нужно сообщить пользователю и вернуть None.
'''
#z = (1, 2, [3, 4, (5, 6, 0)], a=(10, 11), b=(3, 4, [5, 6, [7, 8], []]))

def nsum(*args, **kwargs):
    product = 1
    suma = 0
    for i in args:
        # надо вставить проверку чиссло это или нет и дальше принимать действия
        print(i)
        product *=i
        suma +=i
    for k, value in kwargs.items():
        print(k, value)

    return product, suma
        



nsum(1, 2, [3, 4, (5, 6, 0)], a=(10, 11), b=(3, 4, [5, 6, [7, 8], []]))
